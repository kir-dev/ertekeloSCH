// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

enum Major {
  // Software Engineer
  SE
  // Electrical Engineer
  EE
  BPROF
}

model User {
  authSchId String   @id @default(uuid())
  email     String   @unique
  name      String
  role      Role     @default(USER)
  major     Major
  desc      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubjectRating {
  id               Int      @id @default(autoincrement())
  desc             String
  isAnon           Boolean
  difficultyRating Int      @default(0) // Teljesíthetőség
  interestRating   Int      @default(0) // Érdekesség
  usefulnessRating Int      @default(0) // Hasznosság
  // userId
  // subjectId
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model ProfRating {
  id                 Int      @id @default(autoincrement())
  desc               String
  isAnon             Boolean
  presentationRating Int      @default(0) // Előadásmód
  knowledgeRating    Int      @default(0) // Tudás
  helpfulnessRating  Int      @default(0) // Segítőkészség
  // userId
  // profId
  // subjectRatingId
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model SpecRating {
  id               Int      @id @default(autoincrement())
  desc             String
  isAnon           Boolean
  difficultyRating Int      @default(0) // Teljesíthetőség
  interestRating   Int      @default(0) // Érdekesség
  usefulnessRating Int      @default(0) // Hasznosság
  // specId
  // userId
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
